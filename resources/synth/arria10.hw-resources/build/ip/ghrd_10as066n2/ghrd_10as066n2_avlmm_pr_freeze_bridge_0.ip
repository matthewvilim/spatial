<?xml version="1.0" ?>
<spirit:component xmlns:altera="http://www.altera.com/XMLSchema/IPXact/extensions" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009">
  <spirit:vendor>Intel Corporation</spirit:vendor>
  <spirit:library>ghrd_10as066n2_avlmm_pr_freeze_bridge_0</spirit:library>
  <spirit:name>avlmm_pr_freeze_bridge_0</spirit:name>
  <spirit:version>17.1</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>clock</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="clock" spirit:version="17.1"></spirit:busType>
      <spirit:slave></spirit:slave>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>clockRate</spirit:name>
          <spirit:displayName>Clock rate</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="clockRate">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>externallyDriven</spirit:name>
          <spirit:displayName>Externally driven</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="externallyDriven">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ptfSchematicName</spirit:name>
          <spirit:displayName>PTF schematic name</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="ptfSchematicName"></spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>freeze_conduit</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="conduit" spirit:version="17.1"></spirit:busType>
      <spirit:slave></spirit:slave>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>freeze</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>freeze_conduit_freeze</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>illegal_request</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>freeze_conduit_illegal_request</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>associatedClock</spirit:name>
          <spirit:displayName>associatedClock</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedClock"></spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedReset</spirit:name>
          <spirit:displayName>associatedReset</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedReset"></spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>prSafe</spirit:name>
          <spirit:displayName>Partial Reconfiguration Safe</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="prSafe">false</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>reset_n</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="reset" spirit:version="17.1"></spirit:busType>
      <spirit:slave></spirit:slave>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>reset_n</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>reset_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>associatedClock</spirit:name>
          <spirit:displayName>Associated clock</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedClock">clock</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>synchronousEdges</spirit:name>
          <spirit:displayName>Synchronous edges</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="synchronousEdges">DEASSERT</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>slv_bridge_to_pr</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="avalon" spirit:version="17.1"></spirit:busType>
      <spirit:master></spirit:master>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>waitrequest</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_waitrequest</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>byteenable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_byteenable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>writedata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_writedata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>readdata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_readdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>burstcount</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_burstcount</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>readdatavalid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_readdatavalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>beginbursttransfer</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_beginbursttransfer</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debugaccess</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_debugaccess</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>response</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_response</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_lock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>writeresponsevalid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_pr_writeresponsevalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>adaptsTo</spirit:name>
          <spirit:displayName>Adapts to</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="adaptsTo"></spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressGroup</spirit:name>
          <spirit:displayName>Address group</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="addressGroup">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressUnits</spirit:name>
          <spirit:displayName>Address units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="addressUnits">SYMBOLS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>alwaysBurstMaxBurst</spirit:name>
          <spirit:displayName>Always burst maximum burst</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="alwaysBurstMaxBurst">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedClock</spirit:name>
          <spirit:displayName>Associated clock</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedClock">clock</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedReset</spirit:name>
          <spirit:displayName>Associated reset</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedReset">reset_n</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bitsPerSymbol</spirit:name>
          <spirit:displayName>Bits per symbol</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="bitsPerSymbol">8</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>burstOnBurstBoundariesOnly</spirit:name>
          <spirit:displayName>Burst on burst boundaries only</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="burstOnBurstBoundariesOnly">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>burstcountUnits</spirit:name>
          <spirit:displayName>Burstcount units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="burstcountUnits">WORDS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>constantBurstBehavior</spirit:name>
          <spirit:displayName>Constant burst behavior</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="constantBurstBehavior">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>dBSBigEndian</spirit:name>
          <spirit:displayName>dBS big endian</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="dBSBigEndian">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>doStreamReads</spirit:name>
          <spirit:displayName>Use flow control for read transfers</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="doStreamReads">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>doStreamWrites</spirit:name>
          <spirit:displayName>Use flow control for write transfers</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="doStreamWrites">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>holdTime</spirit:name>
          <spirit:displayName>Hold</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="holdTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>interleaveBursts</spirit:name>
          <spirit:displayName>Interleave bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="interleaveBursts">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isAsynchronous</spirit:name>
          <spirit:displayName>Is asynchronous</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isAsynchronous">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isBigEndian</spirit:name>
          <spirit:displayName>Is big endian</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isBigEndian">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isReadable</spirit:name>
          <spirit:displayName>Is readable</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isReadable">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isWriteable</spirit:name>
          <spirit:displayName>Is writeable</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isWriteable">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>linewrapBursts</spirit:name>
          <spirit:displayName>Linewrap bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="linewrapBursts">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maxAddressWidth</spirit:name>
          <spirit:displayName>Maximum address width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maxAddressWidth">32</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maximumPendingReadTransactions</spirit:name>
          <spirit:displayName>Maximum pending read transactions</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maximumPendingReadTransactions">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maximumPendingWriteTransactions</spirit:name>
          <spirit:displayName>Maximum pending write transactions</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maximumPendingWriteTransactions">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumReadLatency</spirit:name>
          <spirit:displayName>minimumReadLatency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumReadLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumResponseLatency</spirit:name>
          <spirit:displayName>Minimum response latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumResponseLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>prSafe</spirit:name>
          <spirit:displayName>Partial Reconfiguration Safe</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="prSafe">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readLatency</spirit:name>
          <spirit:displayName>Read latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readLatency">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readWaitTime</spirit:name>
          <spirit:displayName>Read wait</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readWaitTime">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>registerIncomingSignals</spirit:name>
          <spirit:displayName>Register incoming signals</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="registerIncomingSignals">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>registerOutgoingSignals</spirit:name>
          <spirit:displayName>Register outgoing signals</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="registerOutgoingSignals">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>setupTime</spirit:name>
          <spirit:displayName>Setup</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="setupTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>timingUnits</spirit:name>
          <spirit:displayName>Timing units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="timingUnits">Cycles</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>waitrequestAllowance</spirit:name>
          <spirit:displayName>Waitrequest allowance</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="waitrequestAllowance">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>writeWaitTime</spirit:name>
          <spirit:displayName>Write wait</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="writeWaitTime">0</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <altera:altera_assignments>
          <spirit:parameters>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isFlash</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isFlash">0</spirit:value>
            </spirit:parameter>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isMemoryDevice</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isMemoryDevice">0</spirit:value>
            </spirit:parameter>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isNonVolatileStorage</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isNonVolatileStorage">0</spirit:value>
            </spirit:parameter>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isPrintableDevice</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isPrintableDevice">0</spirit:value>
            </spirit:parameter>
          </spirit:parameters>
        </altera:altera_assignments>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>slv_bridge_to_sr</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="avalon" spirit:version="17.1"></spirit:busType>
      <spirit:slave></spirit:slave>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>waitrequest</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_waitrequest</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>byteenable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_byteenable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>writedata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_writedata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>readdata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_readdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>burstcount</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_burstcount</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>readdatavalid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_readdatavalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>beginbursttransfer</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_beginbursttransfer</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debugaccess</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_debugaccess</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>response</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_response</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_lock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>writeresponsevalid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>slv_bridge_to_sr_writeresponsevalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>addressAlignment</spirit:name>
          <spirit:displayName>Slave addressing</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="addressAlignment">DYNAMIC</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressGroup</spirit:name>
          <spirit:displayName>Address group</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="addressGroup">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressSpan</spirit:name>
          <spirit:displayName>Address span</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="addressSpan">1024</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressUnits</spirit:name>
          <spirit:displayName>Address units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="addressUnits">SYMBOLS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>alwaysBurstMaxBurst</spirit:name>
          <spirit:displayName>Always burst maximum burst</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="alwaysBurstMaxBurst">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedClock</spirit:name>
          <spirit:displayName>Associated clock</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedClock">clock</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedReset</spirit:name>
          <spirit:displayName>Associated reset</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedReset">reset_n</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bitsPerSymbol</spirit:name>
          <spirit:displayName>Bits per symbol</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="bitsPerSymbol">8</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bridgedAddressOffset</spirit:name>
          <spirit:displayName>Bridged Address Offset</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="bridgedAddressOffset">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bridgesToMaster</spirit:name>
          <spirit:displayName>Bridges to master</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="bridgesToMaster">ghrd_10as066n2_avlmm_pr_freeze_bridge_0.slv_bridge_to_pr</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>burstOnBurstBoundariesOnly</spirit:name>
          <spirit:displayName>Burst on burst boundaries only</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="burstOnBurstBoundariesOnly">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>burstcountUnits</spirit:name>
          <spirit:displayName>Burstcount units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="burstcountUnits">WORDS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>constantBurstBehavior</spirit:name>
          <spirit:displayName>Constant burst behavior</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="constantBurstBehavior">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>explicitAddressSpan</spirit:name>
          <spirit:displayName>Explicit address span</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="explicitAddressSpan">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>holdTime</spirit:name>
          <spirit:displayName>Hold</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="holdTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>interleaveBursts</spirit:name>
          <spirit:displayName>Interleave bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="interleaveBursts">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isBigEndian</spirit:name>
          <spirit:displayName>Big endian</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isBigEndian">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isFlash</spirit:name>
          <spirit:displayName>Flash memory</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isFlash">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isMemoryDevice</spirit:name>
          <spirit:displayName>Memory device</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isMemoryDevice">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isNonVolatileStorage</spirit:name>
          <spirit:displayName>Non-volatile storage</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isNonVolatileStorage">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>linewrapBursts</spirit:name>
          <spirit:displayName>Linewrap bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="linewrapBursts">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maximumPendingReadTransactions</spirit:name>
          <spirit:displayName>Maximum pending read transactions</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maximumPendingReadTransactions">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maximumPendingWriteTransactions</spirit:name>
          <spirit:displayName>Maximum pending write transactions</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maximumPendingWriteTransactions">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumReadLatency</spirit:name>
          <spirit:displayName>minimumReadLatency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumReadLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumResponseLatency</spirit:name>
          <spirit:displayName>Minimum response latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumResponseLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumUninterruptedRunLength</spirit:name>
          <spirit:displayName>Minimum uninterrupted run length</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumUninterruptedRunLength">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>prSafe</spirit:name>
          <spirit:displayName>Partial Reconfiguration Safe</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="prSafe">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>printableDevice</spirit:name>
          <spirit:displayName>Can receive stdout/stderr</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="printableDevice">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readLatency</spirit:name>
          <spirit:displayName>Read latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readLatency">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readWaitStates</spirit:name>
          <spirit:displayName>Read wait states</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readWaitStates">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readWaitTime</spirit:name>
          <spirit:displayName>Read wait</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readWaitTime">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>registerIncomingSignals</spirit:name>
          <spirit:displayName>Register incoming signals</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="registerIncomingSignals">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>registerOutgoingSignals</spirit:name>
          <spirit:displayName>Register outgoing signals</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="registerOutgoingSignals">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>setupTime</spirit:name>
          <spirit:displayName>Setup</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="setupTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>timingUnits</spirit:name>
          <spirit:displayName>Timing units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="timingUnits">Cycles</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>transparentBridge</spirit:name>
          <spirit:displayName>Transparent bridge</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="transparentBridge">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>waitrequestAllowance</spirit:name>
          <spirit:displayName>Waitrequest allowance</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="waitrequestAllowance">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>wellBehavedWaitrequest</spirit:name>
          <spirit:displayName>Well-behaved waitrequest</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="wellBehavedWaitrequest">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>writeLatency</spirit:name>
          <spirit:displayName>Write latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="writeLatency">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>writeWaitStates</spirit:name>
          <spirit:displayName>Write wait states</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="writeWaitStates">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>writeWaitTime</spirit:name>
          <spirit:displayName>Write wait</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="writeWaitTime">0</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <altera:altera_assignments>
          <spirit:parameters>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isFlash</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isFlash">0</spirit:value>
            </spirit:parameter>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isMemoryDevice</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isMemoryDevice">0</spirit:value>
            </spirit:parameter>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isNonVolatileStorage</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isNonVolatileStorage">0</spirit:value>
            </spirit:parameter>
            <spirit:parameter>
              <spirit:name>embeddedsw.configuration.isPrintableDevice</spirit:name>
              <spirit:value spirit:format="string" spirit:id="embeddedsw.configuration.isPrintableDevice">0</spirit:value>
            </spirit:parameter>
          </spirit:parameters>
        </altera:altera_assignments>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>QUARTUS_SYNTH</spirit:name>
        <spirit:envIdentifier>:quartus.altera.com:</spirit:envIdentifier>
        <spirit:modelName>altera_avlmm_pr_freeze_bridge</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>QUARTUS_SYNTH</spirit:localName>
        </spirit:fileSetRef>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>clock</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>freeze_conduit_freeze</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>freeze_conduit_illegal_request</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>reset_n</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_read</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_waitrequest</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_write</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>9</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_byteenable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>3</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_writedata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_readdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_burstcount</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>2</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_readdatavalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_beginbursttransfer</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_debugaccess</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_response</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>1</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_lock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_pr_writeresponsevalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_read</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_waitrequest</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_write</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_address</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>9</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_byteenable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>3</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_writedata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_readdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_burstcount</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>2</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_readdatavalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_beginbursttransfer</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_debugaccess</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_response</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>1</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_lock</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>slv_bridge_to_sr_writeresponsevalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
    </spirit:ports>
  </spirit:model>
  <spirit:vendorExtensions>
    <altera:entity_info>
      <spirit:vendor>Intel Corporation</spirit:vendor>
      <spirit:library>ghrd_10as066n2_avlmm_pr_freeze_bridge_0</spirit:library>
      <spirit:name>altera_avlmm_pr_freeze_bridge</spirit:name>
      <spirit:version>17.1</spirit:version>
    </altera:entity_info>
    <altera:altera_module_parameters>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>Interface_Type</spirit:name>
          <spirit:displayName>PR region interface type</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="Interface_Type">Avalon-MM Slave</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ENABLE_FREEZE_FROM_PR_REGION</spirit:name>
          <spirit:displayName>Enable freeze port from PR region</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="ENABLE_FREEZE_FROM_PR_REGION">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ENABLE_TRAFFIC_TRACKING</spirit:name>
          <spirit:displayName>Enable the bridge to track unfinish transaction</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="ENABLE_TRAFFIC_TRACKING">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>slv_bridge_signal_name_DERIVED</spirit:name>
          <spirit:displayName>Signal Name</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="slv_bridge_signal_name_DERIVED">address,beginbursttransfer,byteenable,debugaccess,read,write,readdata,writedata,waitrequest,readdatavalid,burstcount,response,lock,writeresponsevalid</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>slv_bridge_signal_Enable</spirit:name>
          <spirit:displayName>Enable the Avalon Interface signal</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="slv_bridge_signal_Enable">Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_ADDR_WIDTH</spirit:name>
          <spirit:displayName>Address width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_ADDR_WIDTH">10</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_SYMBOL_WIDTH</spirit:name>
          <spirit:displayName>Symbol width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_SYMBOL_WIDTH">8</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_BYTEEN_WIDTH</spirit:name>
          <spirit:displayName>Number of symbols</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_BYTEEN_WIDTH">4</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_BURSTCOUNT_WIDTH</spirit:name>
          <spirit:displayName>Burstcount width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_BURSTCOUNT_WIDTH">3</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_BURST_LINEWRAP</spirit:name>
          <spirit:displayName>Linewrap bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="SLV_BRIDGE_BURST_LINEWRAP">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_CONSTANTBURSTBEHAVIOR</spirit:name>
          <spirit:displayName>Constant burst behavior</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="SLV_BRIDGE_CONSTANTBURSTBEHAVIOR">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_BURST_BNDR_ONLY</spirit:name>
          <spirit:displayName>Burst on burst boundaries only</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="SLV_BRIDGE_BURST_BNDR_ONLY">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_MAX_PENDING_READS</spirit:name>
          <spirit:displayName>Maximum pending reads</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_MAX_PENDING_READS">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_MAX_PENDING_WRITES</spirit:name>
          <spirit:displayName>Maximum pending writes</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_MAX_PENDING_WRITES">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_FIX_READ_LATENCY</spirit:name>
          <spirit:displayName>Fixed read latency (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_FIX_READ_LATENCY">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_READ_WAIT_TIME</spirit:name>
          <spirit:displayName>Fixed read wait time (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_READ_WAIT_TIME">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_WRITE_WAIT_TIME</spirit:name>
          <spirit:displayName>Fixed write wait time (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="SLV_BRIDGE_WRITE_WAIT_TIME">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLV_BRIDGE_ADDRESS_UNITS</spirit:name>
          <spirit:displayName>Address type</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="SLV_BRIDGE_ADDRESS_UNITS">SYMBOLS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>mst_bridge_signal_name_DERIVED</spirit:name>
          <spirit:displayName>Signal Name</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="mst_bridge_signal_name_DERIVED">address,beginbursttransfer,byteenable,debugaccess,read,write,readdata,writedata,waitrequest,readdatavalid,burstcount,response,lock,writeresponsevalid</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>mst_bridge_signal_Enable</spirit:name>
          <spirit:displayName>Enabled Avalon Interface signal</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="mst_bridge_signal_Enable">Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_ADDR_WIDTH</spirit:name>
          <spirit:displayName>Address width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_ADDR_WIDTH">32</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_SYMBOL_WIDTH</spirit:name>
          <spirit:displayName>Symbol width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_SYMBOL_WIDTH">8</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_BYTEEN_WIDTH</spirit:name>
          <spirit:displayName>Number of symbols</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_BYTEEN_WIDTH">4</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_BURSTCOUNT_WIDTH</spirit:name>
          <spirit:displayName>Burstcount width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_BURSTCOUNT_WIDTH">3</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_BURST_LINEWRAP</spirit:name>
          <spirit:displayName>Linewrap bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="MST_BRIDGE_BURST_LINEWRAP">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_BURST_BNDR_ONLY</spirit:name>
          <spirit:displayName>Burst on burst boundaries only</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="MST_BRIDGE_BURST_BNDR_ONLY">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_CONSTANTBURSTBEHAVIOR</spirit:name>
          <spirit:displayName>Constant burst behavior</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="MST_BRIDGE_CONSTANTBURSTBEHAVIOR">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_MAX_PENDING_READS</spirit:name>
          <spirit:displayName>Maximum pending reads</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_MAX_PENDING_READS">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_MAX_PENDING_WRITES</spirit:name>
          <spirit:displayName>Maximum pending writes</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_MAX_PENDING_WRITES">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_FIX_READ_LATENCY</spirit:name>
          <spirit:displayName>Fixed read latency (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_FIX_READ_LATENCY">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_READ_WAIT_TIME</spirit:name>
          <spirit:displayName>Fixed read wait time (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_READ_WAIT_TIME">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_WRITE_WAIT_TIME</spirit:name>
          <spirit:displayName>Fixed write wait time (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="MST_BRIDGE_WRITE_WAIT_TIME">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MST_BRIDGE_ADDRESS_UNITS</spirit:name>
          <spirit:displayName>Address type</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="MST_BRIDGE_ADDRESS_UNITS">SYMBOLS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AUTO_DEVICE_FAMILY</spirit:name>
          <spirit:displayName>Auto DEVICE_FAMILY</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="AUTO_DEVICE_FAMILY">Arria 10</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AUTO_DEVICE</spirit:name>
          <spirit:displayName>Auto DEVICE</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="AUTO_DEVICE">10AS066N3F40E2SG</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AUTO_DEVICE_SPEEDGRADE</spirit:name>
          <spirit:displayName>Auto DEVICE_SPEEDGRADE</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="AUTO_DEVICE_SPEEDGRADE">2</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </altera:altera_module_parameters>
    <altera:altera_assignments>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>embeddedsw.dts.compatible</spirit:name>
          <spirit:value spirit:format="string" spirit:id="embeddedsw.dts.compatible">simple-bus</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>embeddedsw.dts.group</spirit:name>
          <spirit:value spirit:format="string" spirit:id="embeddedsw.dts.group">bridge</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>embeddedsw.dts.name</spirit:name>
          <spirit:value spirit:format="string" spirit:id="embeddedsw.dts.name">avlmm_pr_freeze_bridge</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>embeddedsw.dts.vendor</spirit:name>
          <spirit:value spirit:format="string" spirit:id="embeddedsw.dts.vendor">altr</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </altera:altera_assignments>
    <altera:altera_system_parameters>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>device</spirit:name>
          <spirit:displayName>Device</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="device">10AS066N3F40E2SG</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>deviceFamily</spirit:name>
          <spirit:displayName>Device family</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="deviceFamily">Arria 10</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>deviceSpeedGrade</spirit:name>
          <spirit:displayName>Device Speed Grade</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="deviceSpeedGrade">2</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>generationId</spirit:name>
          <spirit:displayName>Generation Id</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="generationId">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bonusData</spirit:name>
          <spirit:displayName>bonusData</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="bonusData">bonusData 
{
}
</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>hideFromIPCatalog</spirit:name>
          <spirit:displayName>Hide from IP Catalog</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="hideFromIPCatalog">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>lockedInterfaceDefinition</spirit:name>
          <spirit:displayName>lockedInterfaceDefinition</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="lockedInterfaceDefinition"><![CDATA[<boundaryDefinition>
    <interfaces>
        <interface>
            <name>clock</name>
            <type>clock</type>
            <isStart>false</isStart>
            <ports>
                <port>
                    <name>clock</name>
                    <role>clk</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap/>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>clockRate</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>externallyDriven</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>ptfSchematicName</key>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
        <interface>
            <name>freeze_conduit</name>
            <type>conduit</type>
            <isStart>false</isStart>
            <ports>
                <port>
                    <name>freeze_conduit_freeze</name>
                    <role>freeze</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>freeze_conduit_illegal_request</name>
                    <role>illegal_request</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap/>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>associatedClock</key>
                    </entry>
                    <entry>
                        <key>associatedReset</key>
                    </entry>
                    <entry>
                        <key>prSafe</key>
                        <value>false</value>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
        <interface>
            <name>reset_n</name>
            <type>reset</type>
            <isStart>false</isStart>
            <ports>
                <port>
                    <name>reset_n</name>
                    <role>reset_n</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap/>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>associatedClock</key>
                        <value>clock</value>
                    </entry>
                    <entry>
                        <key>synchronousEdges</key>
                        <value>DEASSERT</value>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
        <interface>
            <name>slv_bridge_to_pr</name>
            <type>avalon</type>
            <isStart>true</isStart>
            <ports>
                <port>
                    <name>slv_bridge_to_pr_read</name>
                    <role>read</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_waitrequest</name>
                    <role>waitrequest</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_write</name>
                    <role>write</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_address</name>
                    <role>address</role>
                    <direction>Output</direction>
                    <width>10</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_byteenable</name>
                    <role>byteenable</role>
                    <direction>Output</direction>
                    <width>4</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_writedata</name>
                    <role>writedata</role>
                    <direction>Output</direction>
                    <width>32</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_readdata</name>
                    <role>readdata</role>
                    <direction>Input</direction>
                    <width>32</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_burstcount</name>
                    <role>burstcount</role>
                    <direction>Output</direction>
                    <width>3</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_readdatavalid</name>
                    <role>readdatavalid</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_beginbursttransfer</name>
                    <role>beginbursttransfer</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_debugaccess</name>
                    <role>debugaccess</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_response</name>
                    <role>response</role>
                    <direction>Input</direction>
                    <width>2</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_lock</name>
                    <role>lock</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_pr_writeresponsevalid</name>
                    <role>writeresponsevalid</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap>
                    <entry>
                        <key>embeddedsw.configuration.isFlash</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>embeddedsw.configuration.isMemoryDevice</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>embeddedsw.configuration.isNonVolatileStorage</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>embeddedsw.configuration.isPrintableDevice</key>
                        <value>0</value>
                    </entry>
                </assignmentValueMap>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>adaptsTo</key>
                    </entry>
                    <entry>
                        <key>addressGroup</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>addressUnits</key>
                        <value>SYMBOLS</value>
                    </entry>
                    <entry>
                        <key>alwaysBurstMaxBurst</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>associatedClock</key>
                        <value>clock</value>
                    </entry>
                    <entry>
                        <key>associatedReset</key>
                        <value>reset_n</value>
                    </entry>
                    <entry>
                        <key>bitsPerSymbol</key>
                        <value>8</value>
                    </entry>
                    <entry>
                        <key>burstOnBurstBoundariesOnly</key>
                        <value>true</value>
                    </entry>
                    <entry>
                        <key>burstcountUnits</key>
                        <value>WORDS</value>
                    </entry>
                    <entry>
                        <key>constantBurstBehavior</key>
                        <value>true</value>
                    </entry>
                    <entry>
                        <key>dBSBigEndian</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>doStreamReads</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>doStreamWrites</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>holdTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>interleaveBursts</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isAsynchronous</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isBigEndian</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isReadable</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isWriteable</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>linewrapBursts</key>
                        <value>true</value>
                    </entry>
                    <entry>
                        <key>maxAddressWidth</key>
                        <value>32</value>
                    </entry>
                    <entry>
                        <key>maximumPendingReadTransactions</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>maximumPendingWriteTransactions</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>minimumReadLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>minimumResponseLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>prSafe</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>readLatency</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>readWaitTime</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>registerIncomingSignals</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>registerOutgoingSignals</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>setupTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>timingUnits</key>
                        <value>Cycles</value>
                    </entry>
                    <entry>
                        <key>waitrequestAllowance</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>writeWaitTime</key>
                        <value>0</value>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
        <interface>
            <name>slv_bridge_to_sr</name>
            <type>avalon</type>
            <isStart>false</isStart>
            <ports>
                <port>
                    <name>slv_bridge_to_sr_read</name>
                    <role>read</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_waitrequest</name>
                    <role>waitrequest</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_write</name>
                    <role>write</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_address</name>
                    <role>address</role>
                    <direction>Input</direction>
                    <width>10</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_byteenable</name>
                    <role>byteenable</role>
                    <direction>Input</direction>
                    <width>4</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_writedata</name>
                    <role>writedata</role>
                    <direction>Input</direction>
                    <width>32</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_readdata</name>
                    <role>readdata</role>
                    <direction>Output</direction>
                    <width>32</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_burstcount</name>
                    <role>burstcount</role>
                    <direction>Input</direction>
                    <width>3</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_readdatavalid</name>
                    <role>readdatavalid</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_beginbursttransfer</name>
                    <role>beginbursttransfer</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_debugaccess</name>
                    <role>debugaccess</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_response</name>
                    <role>response</role>
                    <direction>Output</direction>
                    <width>2</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_lock</name>
                    <role>lock</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>slv_bridge_to_sr_writeresponsevalid</name>
                    <role>writeresponsevalid</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap>
                    <entry>
                        <key>embeddedsw.configuration.isFlash</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>embeddedsw.configuration.isMemoryDevice</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>embeddedsw.configuration.isNonVolatileStorage</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>embeddedsw.configuration.isPrintableDevice</key>
                        <value>0</value>
                    </entry>
                </assignmentValueMap>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>addressAlignment</key>
                        <value>DYNAMIC</value>
                    </entry>
                    <entry>
                        <key>addressGroup</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>addressSpan</key>
                        <value>1024</value>
                    </entry>
                    <entry>
                        <key>addressUnits</key>
                        <value>SYMBOLS</value>
                    </entry>
                    <entry>
                        <key>alwaysBurstMaxBurst</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>associatedClock</key>
                        <value>clock</value>
                    </entry>
                    <entry>
                        <key>associatedReset</key>
                        <value>reset_n</value>
                    </entry>
                    <entry>
                        <key>bitsPerSymbol</key>
                        <value>8</value>
                    </entry>
                    <entry>
                        <key>bridgedAddressOffset</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>bridgesToMaster</key>
                        <value>ghrd_10as066n2_avlmm_pr_freeze_bridge_0.slv_bridge_to_pr</value>
                    </entry>
                    <entry>
                        <key>burstOnBurstBoundariesOnly</key>
                        <value>true</value>
                    </entry>
                    <entry>
                        <key>burstcountUnits</key>
                        <value>WORDS</value>
                    </entry>
                    <entry>
                        <key>constantBurstBehavior</key>
                        <value>true</value>
                    </entry>
                    <entry>
                        <key>explicitAddressSpan</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>holdTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>interleaveBursts</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isBigEndian</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isFlash</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isMemoryDevice</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isNonVolatileStorage</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>linewrapBursts</key>
                        <value>true</value>
                    </entry>
                    <entry>
                        <key>maximumPendingReadTransactions</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>maximumPendingWriteTransactions</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>minimumReadLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>minimumResponseLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>minimumUninterruptedRunLength</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>prSafe</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>printableDevice</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>readLatency</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>readWaitStates</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>readWaitTime</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>registerIncomingSignals</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>registerOutgoingSignals</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>setupTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>timingUnits</key>
                        <value>Cycles</value>
                    </entry>
                    <entry>
                        <key>transparentBridge</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>waitrequestAllowance</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>wellBehavedWaitrequest</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>writeLatency</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>writeWaitStates</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>writeWaitTime</key>
                        <value>0</value>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
    </interfaces>
</boundaryDefinition>]]></spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>systemInfos</spirit:name>
          <spirit:displayName>systemInfos</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="systemInfos"><![CDATA[<systemInfosDefinition>
    <connPtSystemInfos>
        <entry>
            <key>slv_bridge_to_sr</key>
            <value>
                <connectionPointName>slv_bridge_to_sr</connectionPointName>
                <suppliedSystemInfos/>
                <consumedSystemInfos>
                    <entry>
                        <key>ADDRESS_MAP</key>
                    </entry>
                    <entry>
                        <key>ADDRESS_WIDTH</key>
                    </entry>
                    <entry>
                        <key>MAX_SLAVE_DATA_WIDTH</key>
                    </entry>
                </consumedSystemInfos>
            </value>
        </entry>
    </connPtSystemInfos>
</systemInfosDefinition>]]></spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </altera:altera_system_parameters>
    <altera:altera_interface_boundary>
      <altera:interface_mapping altera:name="clock" altera:internal="avlmm_pr_freeze_bridge_0.clock" altera:type="clock" altera:dir="end">
        <altera:port_mapping altera:name="clock" altera:internal="clock"></altera:port_mapping>
      </altera:interface_mapping>
      <altera:interface_mapping altera:name="freeze_conduit" altera:internal="avlmm_pr_freeze_bridge_0.freeze_conduit" altera:type="conduit" altera:dir="end">
        <altera:port_mapping altera:name="freeze_conduit_freeze" altera:internal="freeze_conduit_freeze"></altera:port_mapping>
        <altera:port_mapping altera:name="freeze_conduit_illegal_request" altera:internal="freeze_conduit_illegal_request"></altera:port_mapping>
      </altera:interface_mapping>
      <altera:interface_mapping altera:name="reset_n" altera:internal="avlmm_pr_freeze_bridge_0.reset_n" altera:type="reset" altera:dir="end">
        <altera:port_mapping altera:name="reset_n" altera:internal="reset_n"></altera:port_mapping>
      </altera:interface_mapping>
      <altera:interface_mapping altera:name="slv_bridge_to_pr" altera:internal="avlmm_pr_freeze_bridge_0.slv_bridge_to_pr" altera:type="avalon" altera:dir="start">
        <altera:port_mapping altera:name="slv_bridge_to_pr_address" altera:internal="slv_bridge_to_pr_address"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_beginbursttransfer" altera:internal="slv_bridge_to_pr_beginbursttransfer"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_burstcount" altera:internal="slv_bridge_to_pr_burstcount"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_byteenable" altera:internal="slv_bridge_to_pr_byteenable"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_debugaccess" altera:internal="slv_bridge_to_pr_debugaccess"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_lock" altera:internal="slv_bridge_to_pr_lock"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_read" altera:internal="slv_bridge_to_pr_read"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_readdata" altera:internal="slv_bridge_to_pr_readdata"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_readdatavalid" altera:internal="slv_bridge_to_pr_readdatavalid"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_response" altera:internal="slv_bridge_to_pr_response"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_waitrequest" altera:internal="slv_bridge_to_pr_waitrequest"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_write" altera:internal="slv_bridge_to_pr_write"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_writedata" altera:internal="slv_bridge_to_pr_writedata"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_pr_writeresponsevalid" altera:internal="slv_bridge_to_pr_writeresponsevalid"></altera:port_mapping>
      </altera:interface_mapping>
      <altera:interface_mapping altera:name="slv_bridge_to_sr" altera:internal="avlmm_pr_freeze_bridge_0.slv_bridge_to_sr" altera:type="avalon" altera:dir="end">
        <altera:port_mapping altera:name="slv_bridge_to_sr_address" altera:internal="slv_bridge_to_sr_address"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_beginbursttransfer" altera:internal="slv_bridge_to_sr_beginbursttransfer"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_burstcount" altera:internal="slv_bridge_to_sr_burstcount"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_byteenable" altera:internal="slv_bridge_to_sr_byteenable"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_debugaccess" altera:internal="slv_bridge_to_sr_debugaccess"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_lock" altera:internal="slv_bridge_to_sr_lock"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_read" altera:internal="slv_bridge_to_sr_read"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_readdata" altera:internal="slv_bridge_to_sr_readdata"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_readdatavalid" altera:internal="slv_bridge_to_sr_readdatavalid"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_response" altera:internal="slv_bridge_to_sr_response"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_waitrequest" altera:internal="slv_bridge_to_sr_waitrequest"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_write" altera:internal="slv_bridge_to_sr_write"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_writedata" altera:internal="slv_bridge_to_sr_writedata"></altera:port_mapping>
        <altera:port_mapping altera:name="slv_bridge_to_sr_writeresponsevalid" altera:internal="slv_bridge_to_sr_writeresponsevalid"></altera:port_mapping>
      </altera:interface_mapping>
    </altera:altera_interface_boundary>
    <altera:altera_has_warnings>false</altera:altera_has_warnings>
    <altera:altera_has_errors>false</altera:altera_has_errors>
  </spirit:vendorExtensions>
</spirit:component>